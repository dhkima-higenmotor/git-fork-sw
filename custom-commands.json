[
  {
    "version" : 1
  },
  {
    "action" : {
      "script" : "filenameA=${file}\nEXTENSION=$(echo \"$filename\" | sed 's/^.*\\.//')\n\nif [ $EXTENSION == \"IGES\" ] || [ $EXTENSION == \"IGS\" ] || [ $EXTENSION == \"STL\" ] || [ $EXTENSION == \"DXF\" ] || [ $EXTENSION == \"DWG\" ] || [ $EXTENSION == \"STEP\" ] || [ $EXTENSION == \"STP\" ] || [ $EXTENSION == \"SLDPRT\" ] || [ $EXTENSION == \"SLDASM\" ] || [ $EXTENSION == \"SLDDRW\" ] || [ $EXTENSION == \"iges\" ] || [ $EXTENSION == \"igs\" ] || [ $EXTENSION == \"stl\" ] || [ $EXTENSION == \"dxf\" ] || [ $EXTENSION == \"dwg\" ] || [ $EXTENSION == \"step\" ] || [ $EXTENSION == \"stp\" ] || [ $EXTENSION == \"sldprt\" ] || [ $EXTENSION == \"sldasm\" ] || [ $EXTENSION == \"slddrw\" ]\nthen\n    # Windows Style Path\n    PWD=$(pwd)\n    DRIVE=${PWD:1:1}\n    DIRA=${PWD:2}\n    DIRB=${DIRA//\\//\\\\}\n    filepathA=\"${DRIVE}:${DIRB}\\\\${filenameA}\"\n    TOTAL=${filepathA//\\//\\\\}\n    echo ${TOTAL}\n    #\"C:\\Program Files\\SOLIDWORKS Corp\\SOLIDWORKS\\SLDWORKS.exe\" ${TOTAL}\n    \"/c/Program Files/SOLIDWORKS Corp/eDrawings/eDrawings.exe\" ${TOTAL}\nelse\n    echo \"This is not 3D file.\"\nfi\n",
      "showOutput" : true,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] [eDrawings] 2D,3D View",
    "target" : "file"
  },
  {
    "action" : {
      "script" : "filename=${file:name}\nEXTENSION=$(echo \"$filename\" | sed 's/^.*\\.//')\n\ninput=$1\nif [ $EXTENSION == \"PDF\" ] || [ $EXTENSION == \"pdf\" ]\nthen\n    git show HEAD:${file:name} > A.pdf\n    git show HEAD^:${file:name} > B.pdf\n    diff-pdf --output-diff=C.pdf A.pdf B.pdf\n    #\"C:\\Program Files\\SumatraPDF\\SumatraPDF.exe\" C.pdf\n    mupdf C.pdf\n    rm -f A.pdf B.pdf C.pdf\nelse\n    echo \"This is not .PDF file.\"\nfi\n\n\n\n\n\n\n\n",
      "showOutput" : false,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] diff binary / PDF",
    "target" : "file"
  },
  {
    "action" : {
      "script" : "filename=${file:name}\nEXTENSION=$(echo \"$filename\" | sed 's/^.*\\.//')\n\ninput=$1\nif [ $EXTENSION == \"PNG\" ] || [ $EXTENSION == \"png\" ]\nthen\n    git show HEAD^:${file:name} > A.png\n    git show HEAD:${file:name} > B.png\n    #magick compare A.png B.png -highlight-color red C.png\n    #magick compare A.png B.png -compose Src C.png\n    magick compare A.png B.png C.png\n    #imdisplay C.png\n    #Honeyview.exe C.png\n    qView.exe C.png\n    rm -f A.png B.png C.png\n    echo Finished.\nelse\n    echo \"This is not .PNG file.\"\nfi\n",
      "showOutput" : false,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] diff binary / PNG",
    "target" : "file"
  },
  {
    "action" : {
      "script" : "git merge -Xtheirs ${ref}\n",
      "showOutput" : true,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] MERGE force into current branch",
    "refTargets" : [
      "localbranch"
    ],
    "target" : "ref"
  },
  {
    "action" : {
      "script" : "git branch -r | grep -v \"\\->\" | sed \"s,\\x1B\\[[0-9;]*[a-zA-Z],,g\" | while read remote; do git branch --track \"${remote#origin/}\" \"$remote\"; done\ngit fetch --all\ngit pull --all\n",
      "showOutput" : true,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] PULL all branches",
    "target" : "repository"
  },
  {
    "action" : {
      "script" : "git pull origin ${ref}\ngit pull origin main",
      "showOutput" : true,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] PULL main and current branch",
    "refTargets" : [
      "localbranch"
    ],
    "target" : "ref"
  },
  {
    "action" : {
      "script" : "filename=${file:name}\nEXTENSION=$(echo \"$filename\" | sed 's/^.*\\.//')\ndxfname=${filename%.*}.pdf\n\ninput=$1\nif [ $EXTENSION == \"SLDDRW\" ]\nthen\n    python /d/github/gitsw/swSaveAs.py $filename DXF\nelse\n    echo \"This is not .SLDDRW file.\"\nfi\n",
      "showOutput" : true,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] SW Export / SLDDRW > DXF",
    "target" : "file"
  },
  {
    "action" : {
      "script" : "filename=${file:name}\nEXTENSION=$(echo \"$filename\" | sed 's/^.*\\.//')\npdfname=${filename%.*}.pdf\n\ninput=$1\nif [ $EXTENSION == \"SLDDRW\" ]\nthen\n    python /d/github/gitsw/swSaveAs.py $filename pdf\n    \"C:\\Program Files\\SumatraPDF\\SumatraPDF.exe\" $pdfname\nelse\n    echo \"This is not .SLDDRW file.\"\nfi\n",
      "showOutput" : true,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] SW Export / SLDDRW > PDF",
    "target" : "file"
  },
  {
    "action" : {
      "script" : "filename=${file:name}\nEXTENSION=$(echo \"$filename\" | sed 's/^.*\\.//')\nstpname=${filename%.*}.STEP\n\ninput=$1\nif [ $EXTENSION == \"SLDPRT\" ] || [ $EXTENSION == \"SLDASM\" ]\nthen\n    python /d/github/gitsw/swSaveAs.py $filename STEP\nelse\n    echo \"This is not .SLDPRT or .SLDASM file.\"\nfi\n",
      "showOutput" : true,
      "type" : "sh",
      "waitForExit" : true
    },
    "name" : "[PDM] SW Export / SLDPRT,SLDASM > STEP",
    "target" : "file"
  }
]